%Skate modeling script
clc;clear;close all;
load SWliftdragdata.mat
load relativetipmotion.mat

%assumptions
%no friction force from tail during glide phase
%y reference starts at height of mount at rest. all references from
%assume constant angle of attack for now
%assume no vertical drag
%assume launch speed of vehicle = max speed of tip of leg
%only forces during launch are from leg
averagespeedsave=[];
d=.5:.1:1.2;
for ii=1:length(d)
%skate constant values
gravity=-9.81;                                  %acceleration due to gravity (m/s^2)
dwater=1000;                                    %Density of water (kg/m^3)
vehvoleng=632.88;                               %displacement of the vehicle (in^3)
vehvolmet=vehvoleng*1.6387*10^-5;               %displacement of vehicle(m^3)
buoyforce=-vehvolmet*dwater*gravity;            %buoyant force on vehicle
vehiclemass=10.36;                              %total mass of vehicle in kg
additionalmass=1.53-.34;                        %additional ballast (kg)
totalmass=vehiclemass+additionalmass;
gravforce=totalmass*gravity;
dragcoeff=1.72;                                 %calculated from SW flow sim
crossarea=.02135;                               %cross sectional area of bottom of vehicle(m^2)

%assuming constant angle of attack
AoA=1;  %angle of attack
Fl1=interp1(SWdatastruct.AoA.data,SWdatastruct.lift.data,AoA,'linear','extrap'); %lift force at one BL/s at current AoA
Fd1=interp1(SWdatastruct.AoA.data,SWdatastruct.drag.data,AoA,'linear','extrap'); %drag force at one BL/s at current AoA
V1=.7112*cosd(AoA); %horizontal velocity of flow test (m/s)

%more constants
MS=200000;                          %motor speed (cnts/s)
waitperiod=d(ii);                      %period of waiting between strokes
revcnt=101750;                      %1 revolution in cnts
omega=2*pi*MS/revcnt;               %motor speed in rad/s
R2=.0254;                           %radius of center of exterior wheel to connection, 1inch in m
B=0.04572;                          %length from lower leg mount to joint (1.8in in m)
C=0.10795;                          %length from lower leg mount to tip of foot (4.25in in m)
T=2*pi/omega;                       %period of leg
alphaleg=12.5+AoA;                  %angle of leg plane(degrees)
legangletravel=1.1781;              %total travel length of leg in radians
tiptravel=legangletravel*C;
tiptravelx=tiptravel*cosd(alphaleg);
tiptravely=tiptravel*sind(alphaleg);

%% simulation
dt=.001;                            %time step
time=0:dt:3;                        %time vector (s)

%initial conditions
i=0;
x=0;
y=0;
Vx=0;
Vy=0;
Ax=0;
Ay=0;
Vtipx=0;
Vtipy=0;
theta=-33.749*pi/180;
thetadot=0;
thetadoubledot=0;
Vxrelative=Vx+Vtipx;
phase=0;

%initialize save variables
xsave=[x];
ysave=[y];
Vxsave=[Vx];
Vysave=[Vy];
Axsave=[Ax];
Aysave=[Ay];
Vtipxsave=[Vtipx];
Vtipysave=[Vtipy];
Vxrelativesave=[Vxrelative];
thetasave=[theta];
thetadotsave=[thetadot];
thetadoubledotsave=[thetadoubledot];
phasesave=[phase];
Tipysave=[];

%maxtipy=.0373;

strokestart=0;
strokeindex=1;

while i<length(time)
    i=i+1;
    t=time(i);
    if strokeindex==1;
        
        %velocity of tip relative to ground
        Vxrelative= Vx+Vtipx;
        Vyrelative= Vy+Vtipy;
        
        %to start the leg forward with zero speed at time t=0
        phaseshift=pi/2;
        
        %angle of leg about lower leg mount
        theta=asin(R2/B*sin(omega*(t-strokestart)+phaseshift));
        
        %rotational speed of leg
        thetadot=(R2*omega*cos(omega*(t-strokestart)+phaseshift))./(B*sqrt(1-(R2/B)^2*sin(omega*(t-strokestart)+phaseshift).^2));
        
        %radial accleration
        thetadoubledot=(R2^3*omega^2*sin(omega*(t-strokestart)+phaseshift)*cos(omega*(t-strokestart)+phaseshift)^2)/...
            (B^3*(1-(R2^2*(sin(omega*(t-strokestart)+phaseshift))^2/B^2))^(3/2))-(R2*omega^2*sin(omega*(t-strokestart)+phaseshift))/...
            (B*sqrt(1-(R2^2*(sin(omega*(t-strokestart)+phaseshift))^2)/B^2));
        
        %velocity of the tip of the leg relative to the body
        Vtip=thetadot*C;
        Vtipx=cosd(alphaleg)*Vtip;                              %x component of tip velocity
        Vtipy=sind(alphaleg)*Vtip;                              %y component of tip velocity
        
        %position of leg in y direction
        Tipy=sind(alphaleg)*((theta)*C)-0.014;
        %----------------------------------------
        %note:linear approximation of motion of leg. could be improved by using
        %exact motion calculations or interpolating from data set of tip
        %profile
        %-----------------------------
        
        
        if y<=(-Tipy) && Vxrelative<=0 && thetadoubledot<0 && y>=0
            Vx=-Vtipx;
            Vy=-Vtipy;
            Ax=cosd(alphaleg)*(C*thetadoubledot);
            Ay=sind(alphaleg)*(C*thetadoubledot);
            x=x+Vx*dt;
            y=y+Vy*dt;
            phase=1;
            
        elseif y>0
            % Skate is gliding%%%%%%%%%%%%%%%%%%
            % forces
            liftforce= Vx^2*Fl1/V1^2;  %lift force at current speed
            vertFd=0;                  %vertical drag force. assumed to be zero
            horizFd=-Vx^2*Fd1/V1^2;
            
            
            %accelerations
            Ax=(horizFd/totalmass);                              %horizontal acceleration
            Ay=(buoyforce+gravforce+vertFd+liftforce)/totalmass; %vertical acceleration
            
            %update variables
            Vx=Vx+Ax*dt;
            Vy=Vy+Ay*dt;
            x=x+Vx*dt;
            y=y+Vy*dt;
            phase=2;
        else
            phase=0;
            y=0;
            Vx=0;
            Vy=0;
        end
        
        %save variables
        xsave=[xsave,x];
        ysave=[ysave,y];
        Vxsave=[Vxsave,Vx];
        Vysave=[Vysave,Vy];
        Axsave=[Axsave,Ax];
        Aysave=[Aysave,Ay];
        Vtipxsave=[Vtipxsave,Vtipx];
        Vtipysave=[Vtipysave,Vtipy];
        Vxrelativesave=[Vxrelativesave,Vxrelative];
        thetasave=[thetasave,theta];
        thetadotsave=[thetadotsave,thetadot];
        thetadoubledotsave=[thetadoubledotsave,thetadoubledot];
        phasesave=[phasesave,phase];
        Tipysave=[Tipysave,Tipy];
        
        if (t-strokestart)>=T
            strokeindex=0;
        end
    else
        Vxrelative= Vx+Vtipx;
        Vyrelative= Vy+Vtipy;
        if y>0
            % Skate is gliding%%%%%%%%%%%%%%%%%%
            % forces
            liftforce= Vx^2*Fl1/V1^2;  %lift force at current speed
            vertFd=.5*dwater*dragcoeff*crossarea*-Vx;                  %vertical drag force. assumed to be zero
            horizFd=-Vx^2*Fd1/V1^2;
           
            %dimensions of approximate ellipsoid for added mass force
            %calculations
            a=.35;              %forward radius (m)
            b=.07;              %vertical radius(m)
            c=.305;             %side radius (m)
            radfunC=@intx dwater*pi*(1-intx^2/a)*c;
           
            Vertaddedmassforce=integral(radfunC
            
            %accelerations
            Ax=(horizFd/totalmass);                              %horizontal acceleration
            Ay=(buoyforce+gravforce+vertFd+liftforce)/totalmass; %vertical acceleration
            
            %update variables
            Vx=Vx+Ax*dt;
            Vy=Vy+Ay*dt;
            x=x+Vx*dt;
            y=y+Vy*dt;
            phase=2;
        else
            phase=0;
            y=0;
            Vx=0;
            Vy=0;
        end
        
        %radial velocity
        thetadot=0;
        %radial accleration
        thetadoubledot=0;        
        %Tip velocities
        Vtip=thetadot*C;
        Vtipx=cosd(alphaleg)*Vtip;                              %x component of tip velocity
        Vtipy=sind(alphaleg)*Vtip;                              %y component of tip velocity
        
        
        %save variables
        xsave=[xsave,x];
        ysave=[ysave,y];
        Vxsave=[Vxsave,Vx];
        Vysave=[Vysave,Vy];
        Axsave=[Axsave,Ax];
        Aysave=[Aysave,Ay];
        Vtipxsave=[Vtipxsave,Vtipx];
        Vtipysave=[Vtipysave,Vtipy];
        Vxrelativesave=[Vxrelativesave,Vxrelative];
        thetasave=[thetasave,theta];
        thetadotsave=[thetadotsave,thetadot];
        thetadoubledotsave=[thetadoubledotsave,thetadoubledot];
        phasesave=[phasesave,phase];
        Tipysave=[Tipysave,Tipy];
        
        %trigger switch if necessary
        if (t-strokestart)>=waitperiod
            strokeindex=1;
            strokestart=t;
        end 
    end
end


xtravel=xsave(end);
averagespeed=xtravel/time(end)
xsaveeng=39.37*xsave;
ysaveeng=39.37*ysave;
averagespeedsave=[averagespeedsave,averagespeed];
figure
suba=3;
subplot(suba,1,1)
plot(time,ysave(2:end))
hold on
tipreach=-min(Tipysave);
% plot(time,tipreach,'k--')

title('Vehicle Height above Ground')
xlabel('time (s)')
ylabel('Height (m)')
grid on


subplot(suba,1,2)
% plot(time,Vysave(2:end))
% title('Vertical velocities')
% ylabel('Velocity (m)')
plot(time,Tipysave)
hold on
plot(time,zeros(size(time)),'k');
xlabel('time (s)')
ylabel('Distance (m)')
title('Vertical Position of Leg Tip Relative to Underwing Mount');
grid on

subplot(suba,1,3)
plot(time,Vxsave(2:end),time,Vtipxsave(2:end),'-',time,Vxrelativesave(2:end),'markersize',.5)
title('Horizontal Velocities')
hold on
xlabel('time (s)')
ylabel('Velocities(m/s)')
legend('Vehicle Velocity','Velocity of leg tip relative to body','Velocity of leg tip relative to ground')
grid on
end

dx=0.46355;     %distance from nose to leg mount
recordedtimes=[2+18/30,2+24/30,2+8/30,1+29/30,2+5/30,2+25/30,2+16/30,2+23/30];
recordedspeeds=dx./recordedtimes;

figure
plot(d,averagespeedsave,d,recordedspeeds)
legend('modeled','experimental')
% %% Plots
% suba=3;
% subplot(suba,1,1)
% plot(time,ysave(2:end))
% hold on
% tipreach=-min(Tipysave);
% % plot(time,tipreach,'k--')
% 
% title('Vehicle Height above Ground')
% xlabel('time (s)')
% ylabel('Height (m)')
% grid on
% 
% 
% subplot(suba,1,2)
% % plot(time,Vysave(2:end))
% % title('Vertical velocities')
% % ylabel('Velocity (m)')
% plot(time,Tipysave)
% hold on
% plot(time,zeros(size(time)),'k');
% xlabel('time (s)')
% ylabel('Distance (m)')
% title('Vertical Position of Leg Tip Relative to Underwing Mount');
% grid on
% 
% subplot(suba,1,3)
% plot(time,Vxsave(2:end),time,Vtipxsave(2:end),'-',time,Vxrelativesave(2:end),'markersize',.5)
% title('Horizontal Velocities')
% hold on
% xlabel('time (s)')
% ylabel('Velocities(m/s)')
% legend('Vehicle Velocity','Velocity of leg tip relative to body','Velocity of leg tip relative to ground')
% grid on
% 
% % subplot(suba,1,4)
% % title('1=launch phase, 2=glide phase')
% % plot(time,phasesave(2:end))
% 
% % figure
% % subplot(2,1,1)
% % title('Accelerations')
% % plot(time,Aysave(2:end))
% % xlabel('time (s)')
% % ylabel('acceleration (m/s^2)')
% % legend('Y direction')
% %
% % subplot(2,1,2)
% % title('thetas')
% % plot(time,thetasave(2:end),time,thetadotsave(2:end),time,thetadoubledotsave(2:end))
% % hold on
% % plot(time,zeros(size(time)),'k')
% % xlabel('time')
% % ylabel('rad or rad/s')
% % legend('theta','thetadot','thetadoubledot')
% %
% figure
% plot(xsave,ysave)
% xlabel('x (m)')
% ylabel('y (m)')
% title('Vehicle Position')
% axis equal
% 
% figure
% subplot(2,1,1)
% plot(time,Tipysave/max(abs(Tipysave)),'k')
% hold on
% plot(time,thetadotsave(2:end)/max(thetadotsave),'g')
% plot(time,thetadoubledotsave(2:end)/max(thetadoubledotsave),'r')
% plot(time,zeros(size(time)))
% legend('Vertical location of Tip','thetadot','thetadoubledot')
% xlabel('time (s)')
% ylabel('Scaled Units')
% title('Launch Conditions')
% grid on
% 
% subplot(2,1,2)
% plot(time,Vxsave(2:end),time,Vtipxsave(2:end),'-',time,Vxrelativesave(2:end),'markersize',.5)
% title('Horizontal Velocities')
% hold on
% xlabel('time (s)')
% ylabel('Velocities(m/s)')
% legend('Vehicle Velocity','Velocity of leg tip relative to body','Velocity of leg tip relative to ground')
% grid on